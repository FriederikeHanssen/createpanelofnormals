/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: GATK4_MUTECT2 {
        ext.prefix       = { meta.num_intervals <= 1 ? "${meta.id}" : "${meta.id}.${intervals.simpleName}" }
        ext.args = '-max-mnp-distance 0'
        publishDir       = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/" },
            pattern: "*{vcf.gz,vcf.gz.tbi}",
            saveAs: { meta.num_intervals > 1 ? null : "/mutect2/${it}" }
        ]
    }

    withName: 'GATK4_MERGEVCFS' {
        publishDir       = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/mutect2/${meta.id}" },
            pattern: "*{vcf.gz,vcf.gz.tbi}"
        ]
    }

    withName: GATK4_GENOMICSDBIMPORT {
        publishDir = [
            path: { "${params.outdir}/genomicsdbimport/${meta.id}/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: GATK4_CREATESOMATICPANELOFNORMALS {
        ext.prefix = "panel_of_normals"
        publishDir = [
            path: { "${params.outdir}/mutect2_panelofnormals/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: CNVKIT_BATCH {
        ext.args = [ "",
                params.assume_male ? "-y" : "", // if male donors, then X chromosome will have +1 log-CNR, otherwise male would have -1 chrX (see CNCkit documentation)
                params.sequencing_method ? "-m ${params.sequencing_method}" : "", // can be hybrid,amplicon,wgs (see cnvkit docs)
                "--scatter --diagram"
            ].join(" ").trim()
        publishDir = [
            path: { "${params.outdir}/cnvkit/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

}
